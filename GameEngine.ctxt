#BlueJ class context
comment0.target=GameEngine
comment0.text=\r\n\ \ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ \ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\r\n\ \r\n\ \ This\ class\ creates\ all\ rooms,\ creates\ the\ parser\ and\ starts\r\n\ \ the\ game.\ \ It\ also\ evaluates\ and\ executes\ the\ commands\ that\ \r\n\ \ the\ parser\ returns.\r\n\ \r\n\ @author\ Antoine\ MARMOL\r\n\ @version\ 11\ /\ 21/05/2024\r\n
comment1.params=
comment1.target=GameEngine()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ GameEngine\r\n
comment10.params=
comment10.target=void\ inventory()
comment10.text=\r\n\ prints\ the\ inventory\ of\ the\ player\r\n
comment11.params=pCommand
comment11.target=void\ take(Command)
comment11.text=\r\n\ prints\ the\ action\ of\ taking\ an\ Item\r\n\ \r\n\ @param\ pCommand\ the\ command\ of\ the\ user\r\n
comment12.params=pCommand
comment12.target=void\ drop(Command)
comment12.text=\r\n\ prints\ the\ droping\ an\ Item\r\n\ \r\n\ @param\ pCommand\ the\ command\ of\ the\ user\r\n
comment13.params=pCommand
comment13.target=void\ look(Command)
comment13.text=\r\n\ Prints\ the\ long\ description\ of\ the\ room.\r\n\ \r\n\ @param\ pCommand\ the\ command\ of\ the\ user\r\n
comment14.params=pCommand
comment14.target=void\ eat(Command)
comment14.text=\r\n\ prints\ the\ action\ of\ eating\r\n\ \r\n\ @param\ pCommand\ the\ command\ of\ the\ user\r\n
comment15.params=pCommand
comment15.target=void\ use(Command)
comment15.text=\r\n\ prints\ the\ action\ of\ using\ an\ item.\r\n\ \r\n\ @param\ pCommand\ the\ command\ of\ the\ user.\r\n
comment16.params=
comment16.target=void\ printHelp()
comment16.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment17.params=pCommand
comment17.target=void\ goRoom(Command)
comment17.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ \r\n\ @param\ pCommand\ The\ command\ word\ representing\ the\ direction\ the\ player\ wants\ to\ go\r\n
comment18.params=
comment18.target=void\ back()
comment18.text=\r\n\ Returns\ to\ the\ previous\ room.\r\n
comment19.params=
comment19.target=void\ printLocaInfo()
comment19.text=\r\n\ Prints\ out\ the\ description\ of\ the\ room\ and\ it's\ image.\r\n
comment2.params=pUserInterface
comment2.target=void\ setGUI(UserInterface)
comment2.text=\r\n\ Sets\ the\ user\ interface\ for\ the\ game\ engine.\r\n\ \r\n\ @param\ pUserInterface\ The\ user\ interface\ object\ to\ be\ set.\r\n
comment20.params=
comment20.target=void\ endGame()
comment20.text=\r\n\ Ends\ the\ game\ and\ prints\ out\ the\ ending\ message.\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment4.params=
comment4.target=void\ createRooms()
comment4.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n\ Create\ all\ items\ and\ put\ them\ in\ the\ rooms\r\n
comment5.params=pCommandLine
comment5.target=void\ interpretCommand(java.lang.String)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ If\ this\ command\ ends\ the\ game,\ true\ is\ returned,\ otherwise\ false\ is\r\n\ returned.\r\n\ \r\n\ @param\ pCommandLine\ The\ command\ entered\ by\ the\ user.\r\n
comment6.params=pCommand
comment6.target=void\ test(Command)
comment6.text=\r\n\ Tests\ a\ bunch\ of\ commands\r\n\ \r\n\ @param\ pCommand\ the\ document\ where\ the\ commands\ are\r\n
comment7.params=pCommand
comment7.target=void\ alea(Command)
comment7.text=\r\n\ Saves\ a\ room\ for\ testing\ without\ being\ worried\ by\ the\ Transporter\ Room\r\n\ \r\n\ @param\ pCommand\ The\ command\ entered\ by\ the\ user.\r\n
comment8.params=pCommand
comment8.target=void\ charge(Command)
comment8.text=\r\n\ Prints\ the\ result\ of\ the\ charge\ of\ a\ beamer\r\n\ \r\n\ @param\ pCommand\ The\ command\ entered\ by\ the\ user.\r\n
comment9.params=pCommand
comment9.target=void\ fire(Command)
comment9.text=\r\n\ Prints\ the\ result\ of\ the\ fire\ of\ a\ beamer\r\n\ \r\n\ @param\ pCommand\ The\ command\ entered\ by\ the\ user.\r\n
numComments=21
